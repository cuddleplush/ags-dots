/* 
 *  Shows the last activce window for each monitor (like waybar)
 *  Find a client where FocusHistoryID = 0 and monitor = monitor and get its .class
 */

const hyprland = await Service.import("hyprland")

const winLabel = (monitor: number) => {
    let label = hyprland.workspaces.find((ws: any) => ws.id == hyprland.monitors[monitor].activeWorkspace.id).lastwindowtitle
    // let label = hyprland.bind('workspaces').as(ws => ws.id == hyprland.monitors[monitor].activeWorkspace.id).lastwindowtitle
    // let label = hyprland.clients.find(w => w.workspace.id == Hyprland.monitors[monitor].activeWorkspace.id).class
    // let label = hyprland.clients.find(c => c.focusHistoryID === 0).title
    return label.length > 30 
        ? label.substring(0, 30) + "..." 
        : label
}

const Window = (monitor: number) => Widget.Box({
    className: "module-box",
    children: [
        Widget.Label({ label: "ó°–²", className: "icon" }),
        Widget.Button({
            setup: (self: any) => self
                .hook(hyprland, (self, event?: any) => {
                    if (event === "activewindow")
                    print(winLabel(monitor))
                    self.label = winLabel(monitor) || "Hyprland"
                }, "event" ),
            className: "module"
        }),
    ],
});

export default Window

